set dotenv-load

# List all the tasks
list:
  @just --list --unsorted

# Initialize packer and terraform
init:
  terraform init
  packer init .
  tflint --init

# Build the base image
image *FLAGS: variables
  packer build {{FLAGS}} --var-file=variables.auto.pkrvars.hcl vault.pkr.hcl

# Plan the infrastructure changes
plan *FLAGS: variables
  terraform plan {{FLAGS}}

# Generate the variable files from the environment
variables:
  #!/usr/bin/env sh

  cat > variables.auto.pkrvars.hcl <<EOF
  bucket_name = "$PACKER_BUCKET"
  region = "$REGION"
  EOF

  cat > variables.auto.tfvars <<EOF
  cloudflare_token = "$CLOUDFLARE_API_TOKEN"
  domain = "$DOMAIN"
  dynamodb_table = "$DYNAMODB_TABLE"
  enable_ssh = "$ENABLE_SSH"
  hcp_client_id = "$HCP_CLIENT_ID"
  hcp_client_secret = "$HCP_CLIENT_SECRET"
  packer_bucket = "$PACKER_BUCKET"
  packer_channel = "$PACKER_CHANNEL"
  region = "$REGION"
  subdomain = "$SUBDOMAIN"
  EOF

# Format the configuration
fmt:
  terraform fmt .
  packer fmt .

# Validate the configuration
validate: fmt
  terraform validate .
  packer validate --var-file=variables.auto.pkrvars.hcl vault.pkr.hcl

# Lint the configuration
lint:
  tflint --module

alias f := fmt
alias v := validate
alias l := lint

# Run tests in CI
ci: check-fmt validate lint

# Check that the formatting is correct
check-fmt:
  terraform fmt --check --diff .
  packer fmt --check --diff .
