# List all the tasks
list:
  @just --list --unsorted

# Initialize terraform
init:
  terraform init
  tflint --init

# Plan the infrastructure changes
plan *FLAGS:
  terraform plan {{FLAGS}}

# Format the configuration
fmt:
  terraform fmt -recursive .

# Validate the configuration
validate:
  terraform validate .

# Lint the configuration
lint:
  tflint --module

alias f := fmt
alias v := validate
alias l := lint

# Run shellcheck on the user-data scripts
shellcheck: (template "storage") (template "agent")
  @find scripts/templated/ -type f -exec shellcheck -S style -x {} \;

# Template the user-data for a module
template module:
  python3 scripts/template.py {{module}}

# Run tests in CI
ci: check-fmt validate lint shellcheck

# Check that the formatting is correct
check-fmt:
  terraform fmt --check --diff .

ssh module:
  #!/usr/bin/env bash

  set -e

  ip=$(terraform state show module.{{module}}.digitalocean_droplet.instance | grep "ipv4_address" | head -n 1 | cut -d= -f2- | tr -d ' "\n')
  exec ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@"$ip"
